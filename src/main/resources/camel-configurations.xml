<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:broker="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
         http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">
         
      	<bean id="mongoURI" class="com.mongodb.MongoURI">
      	
			<constructor-arg index="0" value="mongodb://test:test@ds025180.mlab.com:25180/trainbooking" />


		</bean>
		
		<bean id="mongoDB" class="com.mongodb.Mongo">
			<constructor-arg index="0" ref="mongoURI" />
		</bean>
        
        <!-- BEANS -->
        <bean id="missinginputError" class="at.ac.wmpm.booking.processor.MissingInputError" />
        <bean id="requestError" class="at.ac.wmpm.booking.processor.RequestNotFoundError" />
     	
		<!-- ROUTES -->
		<bean id="appRoute" class="at.ac.wmpm.booking.route.AppRouteBuilder" />
		<bean id="offerRoute" class="at.ac.wmpm.booking.route.OfferRouteBuilder"/>
		<bean id="getTrainsRoute" class="at.ac.wmpm.booking.route.GetTrainsRouteBuilder"/>
		<bean id="prepareResponse" class="at.ac.wmpm.booking.route.PrepareResponseRouteBuilder"/>
		
	<!-- <bean id="prepResponseRoute" class="at.ac.wmpm.booking.route.PrepareResponseRouteBuilder"/> -->
		
		<!-- TRAIN1 ROUTES -->
		<bean id="train1Offers" class="at.ac.wmpm.train1.route.Train1OfferRouteBuilder" />
		
		<!-- TRAIN2 ROUTES -->
		<bean id="train2Offers" class="at.ac.wmpm.train2.route.Train2OfferRouteBuilder" />
		
		<!-- SERVICES -->
		<bean id="train1Service" class="at.ac.wmpm.train1.service.TrainService" />
		<bean id="train2Service" class="at.ac.wmpm.train2.service.TrainService" />
		
		<!-- JMS -->
		<broker:broker persistent="false" brokerName="myBroker">
			<broker:transportConnectors>
				<!-- expose a VM transport for in-JVM transport between AMQ and Camel 
					on the server side -->
				<broker:transportConnector name="vm"
					uri="vm://myBroker" />
				<!-- expose a TCP transport for clients to use -->
				<broker:transportConnector name="tcp"
					uri="tcp://localhost:61610" />
			</broker:transportConnectors>
		</broker:broker>
		<bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
			<property name="brokerURL" value="vm://myBroker" />
		</bean>
			
			
		<camelContext id="myConfig" xmlns="http://camel.apache.org/schema/spring">
			<routeBuilder ref="appRoute" />
			<routeBuilder ref="offerRoute" />
			<routeBuilder ref="train1Offers" />
			<routeBuilder ref="train2Offers" /> 
			<routeBuilder ref="prepareResponse" /> 
			<routeBuilder ref="getTrainsRoute" /> 
			<routeBuilder ref="train1Offers" /> 
			<routeBuilder ref="train2Offers" /> 
			
		
		<dataFormats>
			<json id="pojo2json" library="Jackson" disableFeatures="FAIL_ON_EMPTY_BEANS" />
			<xmljson id="xmljson" />
		</dataFormats>
		
		<!-- get offers form train1 + sort route -->
		<route id="rest-forward-request" streamCache="true">
			<from uri="direct:forward" />			
			<!-- <process ref="sortOffers" />  -->
			<choice>
				<when>
					<simple>${body} == null</simple>
					<process ref="requestError" />
				</when>
				<otherwise>
			<!--		<enrich uri="direct:addWeather" strategyRef="aggregationBean" /> -->
				</otherwise>
			</choice>
		</route>
		
		<route streamCache="true">
			<from uri="direct:getTrain1" />
			<to uri="http://localhost:8081/req/" />
			<log message="Response from Train 1: ${body}" />
			
		</route>
		
		<route streamCache="true">
			<from uri="direct:getTrain2" />
			<to uri="http://localhost:8082/req/" />
			<log message="Response from Train 2: ${body}" />
			
</route>
		
	</camelContext>	 
</beans>